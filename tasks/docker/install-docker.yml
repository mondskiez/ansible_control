---
- name: Install Docker-CE and Docker-Compose
  hosts: all
  become: true
  vars:
    arch_mapping:  # Map ansible architecture {{ ansible_architecture }} names to Docker's architecture names
      x86_64: amd64
      aarch64: arm64

  tasks:
    - name: Update and upgrade all packages to the latest version
      apt:
        update_cache: true
        upgrade: dist
        cache_valid_time: 3600

    - name: Docker | installing required packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - software-properties-common
        state: latest

    - name: Docker | create /etc/apt/keyrings directory
      command: sudo install -m 0755 -d /etc/apt/keyrings

    - name: Docker | Ubuntu | adding official GPG key to docker.asc file
      command: sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
      when: ansible_distribution == "Ubuntu"

    - name: Docker | Debian | adding official GPG key to docker.ask file   
      command: sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
      when: ansible_distribution == "Debian"

    - name: Docker | chmod a+r docker.asc file
      command: sudo chmod a+r /etc/apt/keyrings/docker.asc

    - name: Print architecture variables
      debug:
        msg: "Architecture: {{ ansible_architecture }}, Codename: {{ ansible_lsb.codename }}"

    - name: Docker | Ubuntu | adding repository
      shell: |
        echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
        $(. /etc/os-release && echo "{{ ansible_lsb.codename }}") stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      when: ansible_distribution == "Ubuntu"

    - name: Docker | Debian | adding repository
      shell: |
        echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
        $(. /etc/os-release && echo "{{ ansible_lsb.codename }}") stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      when: ansible_distribution == "Debian"

    - name: Docker | updating repository index
      apt:
        update_cache: true

    - name: Docker | installing componets and related packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      loop:
        - python3-pip
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin

    - name: Dokcer | adding Docker group
      group:
        name: docker
        state: present

    - name: Docker | adding user to group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: true

    - name: Enabling and starting Docker services
      systemd:
        name: "{{ item }}"
        enabled: true
        state: started
      loop:
        - docker.service
        - containerd.service

    - name: Get Docker version
      shell: docker version | awk 'FNR==2 {print $2}'
      register: dock_ver
    
    - name: Get Docker Compose version
      shell: docker compose version | awk '{print $4}'
      register: dock_com_ver
    
    - name: Showing version results for Docker and Docker Compose
      debug:
        msg:
          - "Docker version is: {{ dock_ver }}"
          - "Docker compose version is: {{ dock_com_ver }}"
    
    - name: Docker | creating log driver
      copy:
        src: docker/files/daemon.json
        dest: /etc/docker/
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Docker | restarting service
      shell: sudo systemctl restart docker